<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>vavi</groupId>
  <artifactId>vavi-sensor-accelerometer</artifactId>
  <version>0.0.2</version>

  <distributionManagement>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/umjammer/vavi-sensor-accelerometer</url>
    </repository>
  </distributionManagement>

  <profiles>
    <profile>
      <id>local (not on jitpack)</id>
      <activation>
        <os>
          <family>mac</family>
          <arch>x86_64</arch>
        </os>
        <property>
          <name>env.JITPACK</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>1.0-alpha-11</version>
            <extensions>true</extensions>
            <configuration>
              <javahClassNames>
                <javahClassName>vavi.sensor.accelerometer.macbook.MacbookAccelerometer</javahClassName>
              </javahClassNames>
              <javahSearchJNIFromDependencies>false</javahSearchJNIFromDependencies>
              <javahOS>darwin</javahOS>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerStartOptions>
                <compilerStartOption>-g -Wall -O2 -fomit-frame-pointer -fPIC -Wno-sign-compare</compilerStartOption>
                <!-- unless locating jdk includes, cause error why??? -->
                <compilerStartOption>-arch x86_64
                  -I${java.home}/../include
                  -I${java.home}/../include/darwin
                </compilerStartOption>
              </compilerStartOptions>
              <sources>
                <source>
                  <directory>src/main/native</directory>
                  <fileNames>
                    <fileName>SmsWrapper.c</fileName>
                  </fileNames>
                </source>
              </sources>
              <linkerStartOptions>
                <linkerStartOption>-dynamiclib -arch x86_64
                  -L/usr/local/lib -framework IOKit</linkerStartOption>
              </linkerStartOptions>
              <linkerFinalName/>
              <linkerEndOptions>
                <linkerEndOption>-o ${project.build.directory}/libaccelerometer.dylib</linkerEndOption>
              </linkerEndOptions>
            </configuration>
            <executions>
              <execution>
                <id>native</id>
                <phase>compile</phase>
                <goals>
                  <goal>javah</goal>
                  <goal>compile</goal>
                  <goal>link</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!--
              because of maven deploy-file uploads source, jar also
              TODO maven-metadata.xml!/metadata/versioning/latest is not updated
              TODO how about https://stackoverflow.com/a/37552776/6102938
             -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <id>deploy-library</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <executable>mvn</executable>
              <arguments>
                <argument>deploy:deploy-file</argument>
                <argument>-DgroupId=${project.groupId}</argument>
                <argument>-DartifactId=vavi-image-ffmpeg</argument>
                <argument>-Dversion=${project.version}</argument>
                <argument>-Dpackaging=dylib</argument>
                <argument>-Dfile=${project.build.directory}/libaccelerometer.dylib</argument>
                <argument>-DrepositoryId=github</argument>
                <argument>-Durl=https://maven.pkg.github.com/umjammer/vavi-sensor-accelerometer</argument>
                <argument>-s</argument>
                <argument>${env.GITHUB_WORKSPACE}/settings.xml</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- ⚠⚠⚠ WARNING NOT TESTED ⚠⚠⚠ -->
      <id>local windows (not on jitpack)</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
        <property>
          <name>env.JITPACK</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>1.0-alpha-11</version>
            <extensions>true</extensions>
            <configuration>
              <javahClassNames>
                <javahClassName>vavi.sensor.accelerometer.thinkpad.ThinkpadAccelerometer</javahClassName>
              </javahClassNames>
              <javahSearchJNIFromDependencies>false</javahSearchJNIFromDependencies>
              <javahOS>windows</javahOS>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerStartOptions>
                <compilerStartOption>-g -Wall -O2 -fomit-frame-pointer -fPIC -Wno-sign-compare</compilerStartOption>
                <!-- unless locating jdk includes, cause error why??? -->
                <compilerStartOption>
                  -I${java.home}/../include
                  -I${java.home}/../include/darwin
                </compilerStartOption>
              </compilerStartOptions>
              <sources>
                <source>
                  <directory>src/main/native</directory>
                  <fileNames>
                    <fileName>SensorWrapper.c</fileName>
                  </fileNames>
                </source>
              </sources>
              <linkerStartOptions>
                <linkerStartOption>-dynamiclib
                  -L/usr/local/lib</linkerStartOption>
              </linkerStartOptions>
              <linkerFinalName/>
              <linkerEndOptions>
                <linkerEndOption>-o ${project.build.directory}/libaccelerometer.dll</linkerEndOption>
              </linkerEndOptions>
            </configuration>
            <executions>
              <execution>
                <id>native</id>
                <phase>compile</phase>
                <goals>
                  <goal>javah</goal>
                  <goal>compile</goal>
                  <goal>link</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <argLine>
            -Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
            -Djava.library.path=${project.build.directory}
          </argLine>
          <trimStackTrace>false</trimStackTrace>
          <forkMode>always</forkMode>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.9.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
  	<dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
  		<version>5.12.1</version>
  	</dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>